//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.33440.
// 
#pragma warning disable 1591

namespace FilesSharing.fileShareWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertFIlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFIlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchResultsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::FilesSharing.Properties.Settings.Default.Server_project_fileShareWS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertFIlesCompletedEventHandler insertFIlesCompleted;
        
        /// <remarks/>
        public event DeleteFIlesCompletedEventHandler DeleteFIlesCompleted;
        
        /// <remarks/>
        public event GetSearchResultsCompletedEventHandler GetSearchResultsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertFIles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertFIles(System.Data.DataSet ds) {
            this.Invoke("insertFIles", new object[] {
                        ds});
        }
        
        /// <remarks/>
        public void insertFIlesAsync(System.Data.DataSet ds) {
            this.insertFIlesAsync(ds, null);
        }
        
        /// <remarks/>
        public void insertFIlesAsync(System.Data.DataSet ds, object userState) {
            if ((this.insertFIlesOperationCompleted == null)) {
                this.insertFIlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertFIlesOperationCompleted);
            }
            this.InvokeAsync("insertFIles", new object[] {
                        ds}, this.insertFIlesOperationCompleted, userState);
        }
        
        private void OninsertFIlesOperationCompleted(object arg) {
            if ((this.insertFIlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertFIlesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFIles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFIles(System.Data.DataSet ds) {
            this.Invoke("DeleteFIles", new object[] {
                        ds});
        }
        
        /// <remarks/>
        public void DeleteFIlesAsync(System.Data.DataSet ds) {
            this.DeleteFIlesAsync(ds, null);
        }
        
        /// <remarks/>
        public void DeleteFIlesAsync(System.Data.DataSet ds, object userState) {
            if ((this.DeleteFIlesOperationCompleted == null)) {
                this.DeleteFIlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFIlesOperationCompleted);
            }
            this.InvokeAsync("DeleteFIles", new object[] {
                        ds}, this.DeleteFIlesOperationCompleted, userState);
        }
        
        private void OnDeleteFIlesOperationCompleted(object arg) {
            if ((this.DeleteFIlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFIlesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchResults", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSearchResults(System.Data.DataSet ds, string fileName) {
            object[] results = this.Invoke("GetSearchResults", new object[] {
                        ds,
                        fileName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchResultsAsync(System.Data.DataSet ds, string fileName) {
            this.GetSearchResultsAsync(ds, fileName, null);
        }
        
        /// <remarks/>
        public void GetSearchResultsAsync(System.Data.DataSet ds, string fileName, object userState) {
            if ((this.GetSearchResultsOperationCompleted == null)) {
                this.GetSearchResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchResultsOperationCompleted);
            }
            this.InvokeAsync("GetSearchResults", new object[] {
                        ds,
                        fileName}, this.GetSearchResultsOperationCompleted, userState);
        }
        
        private void OnGetSearchResultsOperationCompleted(object arg) {
            if ((this.GetSearchResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchResultsCompleted(this, new GetSearchResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void insertFIlesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteFIlesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetSearchResultsCompletedEventHandler(object sender, GetSearchResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591